const express = require('express');
const User = require('../Models/Users');
const multer = require('multer');
const path = require('path');
const router = express.Router();



const storage = multer.diskStorage({
    destination: (req, file, cb) => {
        cb(null, 'public/images/'); // YÃ¼klenen resimler "images" klasÃ¶rÃ¼ne kaydedilecek
    },
    filename: (req, file, cb) => {
        cb(null, Date.now() + path.extname(file.originalname)); // Dosya ismini benzersiz yap
    }
});

const upload = multer({ storage: storage });


router.get('/', async (req, res) => {
    try {
        const users = await User.find();
        res.json(users);
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
});

router.get('/:id', async (req, res) => {
    try {
        console.log(`KullanÄ±cÄ± ID: ${req.params.id}`); // Gelen ID'yi kontrol et
        const user = await User.findById(req.params.id).select('-password');

        if (!user) {
            console.log('KullanÄ±cÄ± bulunamadÄ±');
            return res.status(404).json({ message: 'KullanÄ±cÄ± bulunamadÄ±' });
        }

        console.log('KullanÄ±cÄ± bulundu:', user);
        res.json(user);
    } catch (error) {
        console.error('Hata:', error.message);
        res.status(500).json({ error: error.message });
    }
});


router.put('/update-profile/:userId', async (req, res) => {
    try {
        const { name, profileImage, jobTitle, bio } = req.body;

        console.log("ğŸ“© Gelen gÃ¼ncelleme isteÄŸi:", req.body);

        // KullanÄ±cÄ±yÄ± bul ve gÃ¼ncelle
        const updatedUser = await User.findByIdAndUpdate(
            req.params.userId,
            {
                name: name,
                profileImage: profileImage,
                jobTitle: jobTitle,
                bio: bio
            },
            { new: true } // GÃ¼ncellenmiÅŸ kullanÄ±cÄ±yÄ± dÃ¶ndÃ¼r
        );

        if (!updatedUser) {
            return res.status(404).json({ message: 'KullanÄ±cÄ± bulunamadÄ±!' });
        }

        console.log("âœ… KullanÄ±cÄ± baÅŸarÄ±yla gÃ¼ncellendi:", updatedUser);
        res.json(updatedUser);
    } catch (error) {
        console.error("ğŸš¨ Profil gÃ¼ncelleme hatasÄ±:", error);
        res.status(500).json({ message: 'Sunucu hatasÄ±' });
    }
});



router.post('/upload-profile-image', upload.single('profileImage'), async (req, res) => {
    try {
        console.log("ğŸ“© Ä°stek geldi! KullanÄ±cÄ± ID:", req.body.userId);
        console.log("ğŸ“‚ YÃ¼klenen dosya:", req.file);

        if (!req.file) {
            return res.status(400).json({ error: 'Dosya yÃ¼klenemedi!' });
        }

        const imageUrl = `http://localhost:8000/public/images/${req.file.filename}`;

        // KullanÄ±cÄ±yÄ± gÃ¼ncelle (MongoDB'de profileImage URL'sini kaydet)
        const updatedUser = await User.findByIdAndUpdate(
            req.body.userId,
            { profileImage: imageUrl },
            { new: true } // GÃ¼ncellenmiÅŸ kullanÄ±cÄ±yÄ± dÃ¶ndÃ¼r
        );

        if (!updatedUser) {
            return res.status(404).json({ error: 'KullanÄ±cÄ± bulunamadÄ±!' });
        }

        res.json({ imageUrl: updatedUser.profileImage, message: "Profil resmi gÃ¼ncellendi!" });
    } catch (error) {
        console.error("ğŸš¨ Hata:", error);
        res.status(500).json({ error: 'Sunucu hatasÄ±!' });
    }
});


  


module.exports = router;